# Generated by Django 5.0.6 on 2024-12-12 18:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BooleanQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=250, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
            ],
            options={
                'db_table': 'Boolean question',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_42', models.IntegerField(unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Cursus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_42', models.IntegerField(unique=True)),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DateQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=320, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
            ],
            options={
                'db_table': 'Date question',
            },
        ),
        migrations.CreateModel(
            name='EmailQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=320, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
            ],
            options={
                'db_table': 'email_question',
            },
        ),
        migrations.CreateModel(
            name='FileQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=320, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
            ],
            options={
                'db_table': 'File question',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, verbose_name='Nombre')),
                ('favourite', models.BooleanField(default=False, verbose_name='Favorito')),
                ('message_end_form', models.CharField(default='Final de formulario', max_length=500, verbose_name='Mensaje final')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'Forms',
            },
        ),
        migrations.CreateModel(
            name='SettingsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ejemplo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('intra_id', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_cancel', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_42_staf', models.BooleanField(default=False)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('settings', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user', to='core.settingsuser')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_valid', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BooleanAswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.BooleanField(null=True)),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.booleanquestion')),
            ],
        ),
        migrations.CreateModel(
            name='DateAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DateField()),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.datequestion')),
            ],
        ),
        migrations.CreateModel(
            name='EmailAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.EmailField(blank=True, max_length=320, null=True)),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_answers', to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.emailquestion')),
            ],
        ),
        migrations.CreateModel(
            name='FileAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FileField(upload_to='uploads/')),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.filequestion')),
            ],
        ),
        migrations.AddField(
            model_name='filequestion',
            name='form_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form'),
        ),
        migrations.AddField(
            model_name='emailquestion',
            name='form_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form'),
        ),
        migrations.AddField(
            model_name='datequestion',
            name='form_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form'),
        ),
        migrations.AddField(
            model_name='booleanquestion',
            name='form_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form'),
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=250, verbose_name='Pregunta')),
                ('options', models.JSONField(default=dict)),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'Multiple Choice question',
            },
        ),
        migrations.CreateModel(
            name='MultipleChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(default=dict)),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.multiplechoicequestion')),
            ],
        ),
        migrations.CreateModel(
            name='NumberQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=250, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'Number question',
            },
        ),
        migrations.CreateModel(
            name='NumberAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(default=0)),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.numberquestion')),
            ],
        ),
        migrations.CreateModel(
            name='OptionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=250, verbose_name='Pregunta')),
                ('options', models.JSONField(default=dict)),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'Option question',
            },
        ),
        migrations.CreateModel(
            name='ScaleQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=320, verbose_name='Pregunta')),
                ('min_value', models.IntegerField(default=1, verbose_name='Valor mínimo')),
                ('max_value', models.IntegerField(default=5, verbose_name='Valor máximo')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'Scale question',
            },
        ),
        migrations.CreateModel(
            name='ScaleAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.scalequestion')),
            ],
        ),
        migrations.CreateModel(
            name='SentForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sended', models.DateTimeField(verbose_name='sended')),
                ('answered', models.BooleanField(default=False, verbose_name='answered')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'SentForm',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='sent_form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sentform'),
        ),
        migrations.CreateModel(
            name='SingleChoiceAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.optionquestion')),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('max_chars', models.IntegerField(default=1000, verbose_name='Maximo número de caracteres')),
                ('min_chars', models.IntegerField(default=1, verbose_name='Mínimo número de caracteres')),
                ('text', models.CharField(max_length=300, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'Text question',
            },
        ),
        migrations.CreateModel(
            name='CharFieldAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.MinLengthValidator(3)])),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.textquestion')),
            ],
        ),
        migrations.CreateModel(
            name='URLQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(verbose_name='pregunta número')),
                ('text', models.CharField(max_length=320, verbose_name='Pregunta')),
                ('is_required', models.BooleanField(default=1, verbose_name='¿Respuesta requerida?')),
                ('form_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.form')),
            ],
            options={
                'db_table': 'URL question',
            },
        ),
        migrations.CreateModel(
            name='URLAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.URLField()),
                ('answer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.answer')),
                ('question_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.urlquestion')),
            ],
        ),
        migrations.AddConstraint(
            model_name='emailquestion',
            constraint=models.UniqueConstraint(fields=('order', 'form_id_id'), name='unique_order_per_form'),
        ),
        migrations.AddConstraint(
            model_name='textquestion',
            constraint=models.UniqueConstraint(fields=('order', 'form_id_id'), name='unique_order_tq_per_form'),
        ),
    ]
